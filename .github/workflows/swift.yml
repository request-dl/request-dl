name: Swift

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Swift ${{ matrix.swift }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        swift: ["5.7.2"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: ☑️ Swift Select
        uses: swift-actions/setup-swift@v1
        with:
            swift-version: ${{ matrix.swift }}

      - name: ⬇️ Get Sources
        uses: actions/checkout@v3.3.0

      - name: 🛠️ Build Package
        run: swift build -v

#      - name: 🔎 Test Package
#        run: swift build -v
#        if: matrix.os == 'ubuntu-latest'

      - name: 🍀 Code Coverage (Codecov)
        uses: codecov/codecov-action@v3

#      - name: 🍀 Code Coverage (Code Climate)
#        uses: paambaati/codeclimate-action@v3.2.0
#        env:
#          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
#        with:
#          coverageCommand: |
#            xcrun llvm-cov export \
#                Package.swift \
#                --instr-profile=.build/debug/codecov/default.profdata \
#                --ignore-filename-regex=".build|Tests|Pods|Carthage|DerivedData" \
#                --format="lcov" > output.json
#                 \
#              --ignore-filename-regex='(.build|Tests)[/\\].*' \
#              -instr-profile $(swift test --enable-code-coverage --show-codecov-path | xargs dirname)/default.profdata \
#              $(swift test --show-test-binary-path)
#          debug: true
#          coverageLocations: ${{github.workspace}}/.build/debug/codecov/*.json:lcov-json
#        if: matrix.os == 'macos-latest'
